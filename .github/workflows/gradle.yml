name: Android CI with Gradle

on:
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  app:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Cache Gradle dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
            ~/.gradle/wrapper/dists
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            gradle-${{ runner.os }}-

      - name: Decode google-services.json
        run: echo "${{ secrets.GOOGLE_SERVICES_JSON }}" | base64 --decode > app/google-services.json

      - name: Create local.properties
        run: echo "sdk.dir=$ANDROID_HOME" > local.properties

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Spotless check app module
        run: ./gradlew :app:spotlessCheck

      - name: Build with Gradle
        run: ./gradlew :app:assembleDebug

      - name: Run tests and generate coverage
        run: ./gradlew :app:testDebugUnitTest :app:jacocoTestReport

      - name: Upload JaCoCo HTML report
        uses: actions/upload-artifact@v4
        with:
          name: jacoco-html-report
          path: app/build/reports/jacoco/jacocoTestReport/html

      - name: Install xmllint
        run: sudo apt-get update && sudo apt-get install -y libxml2-utils

      - name: Parse JaCoCo coverage and write summary
        run: |
          XML_FILE=app/build/reports/jacoco/jacocoTestReport/jacocoTestReport.xml
          LINE_COVERAGE=$(xmllint --xpath "string(/report/counter[@type='LINE']/@covered)" $XML_FILE)
          LINE_MISSED=$(xmllint --xpath "string(/report/counter[@type='LINE']/@missed)" $XML_FILE)
          TOTAL=$((LINE_COVERAGE + LINE_MISSED))
          if [ "$TOTAL" -eq 0 ]; then
            PERCENT=0
          else
            PERCENT=$((100 * LINE_COVERAGE / TOTAL))
          fi
          echo "### Code Coverage Summary" >> $GITHUB_STEP_SUMMARY
          echo "- Lines covered: $LINE_COVERAGE / $TOTAL ($PERCENT%)" >> $GITHUB_STEP_SUMMARY
        shell: bash

  qgateway:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Cache Gradle dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
            ~/.gradle/wrapper/dists
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            gradle-${{ runner.os }}-

      - name: Decode google-services.json
        run: echo "${{ secrets.GOOGLE_SERVICES_JSON }}" | base64 --decode > qgateway/google-services.json

      - name: Create local.properties
        run: echo "sdk.dir=$ANDROID_HOME" > local.properties

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Spotless check app module
        run: ./gradlew :qgateway:spotlessCheck

      - name: Build with Gradle
        run: ./gradlew :qgateway:assembleDebug

      - name: Run tests and generate coverage
        run: ./gradlew :qgateway:testDebugUnitTest :qgateway:jacocoTestReport

      - name: Upload JaCoCo HTML report
        uses: actions/upload-artifact@v4
        with:
          name: jacoco-html-report
          path: app/build/reports/jacoco/jacocoTestReport/html

      - name: Install xmllint
        run: sudo apt-get update && sudo apt-get install -y libxml2-utils

      - name: Parse JaCoCo coverage and write summary
        run: |
          XML_FILE=app/build/reports/jacoco/jacocoTestReport/jacocoTestReport.xml
          LINE_COVERAGE=$(xmllint --xpath "string(/report/counter[@type='LINE']/@covered)" $XML_FILE)
          LINE_MISSED=$(xmllint --xpath "string(/report/counter[@type='LINE']/@missed)" $XML_FILE)
          TOTAL=$((LINE_COVERAGE + LINE_MISSED))
          if [ "$TOTAL" -eq 0 ]; then
            PERCENT=0
          else
            PERCENT=$((100 * LINE_COVERAGE / TOTAL))
          fi
          echo "### Code Coverage Summary" >> $GITHUB_STEP_SUMMARY
          echo "- Lines covered: $LINE_COVERAGE / $TOTAL ($PERCENT%)" >> $GITHUB_STEP_SUMMARY
        shell: bash